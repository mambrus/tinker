dnl This is the tinker/bsp/gnu_i386/board/localhost configure.in file.
dnl Process this file with autoconf to produce a configure script.

AC_PREREQ([2.59])

AC_INIT(localhost, [0.1.0])
AC_MSG_NOTICE([<<< Running configure for $PACKAGE_NAME version $PACKAGE_VERSION >>>])

AC_CONFIG_AUX_DIR(../../../..)

sources_c="initfini_board.c console.c"
sources_asm=""

extras="$extras ../../../../lib/ram_gnu.ld"
extern_includes="../.."


# By putting the start module in the library we don't have to use crt0.o
# Our start module will output to a special section that we can let the linker 
# relocate automagically instead
sources_asm="startup.AO"

# Provide a crt0.o for being able to run on a linux host

extras="$extras ../../../../lib/crt0.o"

CRT0_OBJECT=crt1.o


AC_PROG_CC
TINKER_CONFIGURE(../../../..)
subdirs=
AC_SUBST(subdirs)



dnl Tunings. Main reason they are here is to set defaults specific to this target.
dnl This part will is an itermediate solution and takes over the rols of >>tk_tuning.h<<
dnl Future solutions might me an ordinary text file that both GNU and non GNU build 
dnl   sytems can make use of

if test $SYSTEM == 'hixs'; then
   AC_DEFINE([TK_SYSTEM],__SYS_HIXS__)
else
   AC_DEFINE([TK_SYSTEM],__SYS_UNKNOWN__)
   AC_MSG_ERROR([<<< Sorry, TinKer for this port (i386-*-*) does only support HIXS systems (i.e. i386-hixs-*)])
fi

AC_ARG_ENABLE(min_stack,
	AS_HELP_STRING([--enable-min_stack=<val>],[Maximum size of a stack for a thread ]),
	AC_DEFINE_UNQUOTED([TK_MINIMUM_STACK_SIZE],$enableval),
	AC_DEFINE_UNQUOTED([TK_MINIMUM_STACK_SIZE],0x8000)
)
AC_ARG_ENABLE(norm_stack,
	AS_HELP_STRING([--enable-norm_stack=<val>],[Stacksize used when stack-size is omitted ]),
	AC_DEFINE_UNQUOTED([TK_NORMAL_STACK_SIZE],$enableval),
	AC_DEFINE_UNQUOTED([TK_NORMAL_STACK_SIZE],0x8000)
)
AC_ARG_ENABLE(max_threads,
	AS_HELP_STRING([--enable-max_threads=<val>],[Maximum number of threds your system could have ]),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS],500)
)
AC_ARG_ENABLE(max_prio,
	AS_HELP_STRING([--enable-max_prio=<val>],[Numer of priorities for you system  (recomended value: 3 or 16)]),
	AC_DEFINE_UNQUOTED([TK_MAX_PRIO_LEVELS],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_PRIO_LEVELS],16)
)
AC_ARG_ENABLE(that_prio,
	AS_HELP_STRING([--enable-that_prio=<val>],[Number of threads that can be sceduled at each priority ]),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS_AT_PRIO],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS_AT_PRIO],250)
)
AC_ARG_ENABLE(thename_len,
	AS_HELP_STRING([--enable-thename_len=<val>],[Lengts of the string in TCB that holds the name of the thread ]),
	AC_DEFINE_UNQUOTED([TK_THREAD_NAME_LEN],$enableval),
	AC_DEFINE_UNQUOTED([TK_THREAD_NAME_LEN],0x17)
)
AC_ARG_ENABLE(blocked_q,
	AS_HELP_STRING([--enable-blocked_q=<val>],[Maximum nuber of threads blocked on any ITC primitive, i.e. not only Q ]),
	AC_DEFINE_UNQUOTED([TK_MAX_BLOCKED_ON_Q],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_BLOCKED_ON_Q],TK_MAX_THREADS)
)
AC_ARG_ENABLE(max_q,
	AS_HELP_STRING([--enable-max_q=<val>],[Maximum number of any ITC primitive, i.e not only Q ]),
	AC_DEFINE_UNQUOTED([TK_MAX_NUM_Q],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_NUM_Q],TK_MAX_THREADS)
)

# Set better default values than any previously set in either config.in earler in the 
# chain or in any of the two levels of tk_tuning.h


AC_ARG_ENABLE(how-to-malloc,
	AS_HELP_STRING([--enable-how-to-mallow=<val>],[Advanced pimary porting - ORIGINAL/STUBBED/RENAMED/VOIDED]),
	AC_DEFINE_UNQUOTED([TK_HOWTO_MALLOC],TK_FNK_$enableval),
	AC_DEFINE_UNQUOTED([TK_HOWTO_MALLOC],TK_FNK_ORIGINAL /*ESC default*/)
)

AC_ARG_ENABLE(how-to-clock,
	AS_HELP_STRING([--enable-how-to-clock=<val>],[Advanced pimary porting - ORIGINAL/STUBBED/RENAMED/VOIDED]),
	AC_DEFINE_UNQUOTED([TK_HOWTO_CLOCK],TK_FNK_$enableval),
	AC_DEFINE_UNQUOTED([TK_HOWTO_CLOCK],TK_FNK_ORIGINAL /*ESC default*/)
)

AC_ARG_ENABLE(how-to-printk,
	AS_HELP_STRING([--enable-how-to-printk=<val>],[Advanced pimary porting - )]),
	AC_DEFINE_UNQUOTED([TK_HOWTO_PRINTK],TK_FNK_$enableval),
	AC_DEFINE_UNQUOTED([TK_HOWTO_PRINTK],TK_FNK_RENAMED /*ESC default*/)
)

AC_ARG_ENABLE(how-to-assert,
	AS_HELP_STRING([--enable-how-to-assert=<val>],[Advanced pimary porting - ]),
	AC_DEFINE_UNQUOTED([TK_HOWTO_ASSERT],TK_FNK_$enableval),
	AC_DEFINE_UNQUOTED([TK_HOWTO_ASSERT],TK_FNK_RENAMED /*ESC default*/)
)

# We claim that we have an emergency console (or allow configure to disable it
# or choose anouthe function name

AC_ARG_ENABLE(emrgcy-console,
	AS_HELP_STRING([--enable-emrgcy-console=<val>],[Claim an emergency console is available by the BSP. Alterativly, name a function to use.]),
	AC_DEFINE_UNQUOTED([TK_USE_EMRGCY_CONSOLE],__tk_$enableval),
	AC_DEFINE_UNQUOTED([TK_USE_EMRGCY_CONSOLE],console_write)
)


dnl Update config.h
AC_CONFIG_HEADER(../../../../include/tinker/config.h)

AC_OUTPUT(Makefile-gnu)
