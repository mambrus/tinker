dnl This is the tinker/bsp/gnu_arm configure.in file.
dnl Process this file with autoconf to produce a configure script.

AC_PREREQ([2.59])
#AC_INIT(startup_gnu.s)
AC_INIT(gnu_arm, [0.1.0])
AC_MSG_NOTICE([<<< Running configure for $PACKAGE_NAME version $PACKAGE_VERSION >>>])

AC_CONFIG_AUX_DIR(../..)

dnl The following is sadly not working properly. Use autoconf -I <dir> instead to get the aclocal.m4
#AC_CONFIG_MACRO_DIR(../..)

sources_c="tk_systimer.c"
#sources_asm="startup_gnu.s"
sources_asm=""
extras="../../lib/ram_gnu.ld ../../lib/flash_gnu.ld ../../lib/crt0.o"

TINKER_CONFIGURE(../..)

AC_CONFIG_SUBDIRS([MCPU])
AC_CONFIG_SUBDIRS([BOARD])

AC_DEFINE([ANGEL_SWI],0,[Default system])
AC_DEFINE([HIXS],0,[HIXS system])

if test $SYSTEM == 'default'; then
    AC_DEFINE([TK_SYSTEM],__SYS_ANGEL_SWI__)
    sources_c="$sources_c tk_angel.c "
	##sources_c="tk_angel.c tk_systimer.c"
elif test $SYSTEM == 'hixs'; then
    AC_DEFINE([TK_SYSTEM],__SYS_HIXS__)
    #LDFLAGS=${TOOLDIR}/${host_alias}/lib/crt0.o
    #AC_SUBST(LDFLAGS)

    #sources_c="tk_systimer.c hixsys.c"
    sources_c="$sources_c hixsys.c"

    #Note: Template theese from i386 or powerpc, but a must is to but them
    #further down in the configure chain or it will break older pattforms
    #before HIXS was invented and who use system-clock and sbrk differently
    # sources_c="$sources_c syscon.c initfini.c" 
    #(Btw rename "syscon" to # "sysconfig" or something less confusing)
else
   AC_MSG_ERROR([<<< "Tinker does not support the system you'we chosen"])
fi

ALL_C=$sources_c
AC_SUBST(ALL_C)

dnl Tunings. Main reason they are here is to set defaults specific to this target.
dnl This part will is an itermediate solution and takes over the rols of >>tk_tuning.h<<
dnl Future solutions might me an ordinary text file that both GNU and non GNU build 
dnl   sytems can make use of
AC_ARG_ENABLE(min_stack,
	AS_HELP_STRING([--enable-min_stack=<val>],[Maximum size of a stack for a thread ]),
	AC_DEFINE_UNQUOTED([TK_MINIMUM_STACK_SIZE],$enableval),
	AC_DEFINE_UNQUOTED([TK_MINIMUM_STACK_SIZE],0x0300)
)
AC_ARG_ENABLE(norm_stack,
	AS_HELP_STRING([--enable-norm_stack=<val>],[Stacksize used when stack-size is omitted ]),
	AC_DEFINE_UNQUOTED([TK_NORMAL_STACK_SIZE],$enableval),
	AC_DEFINE_UNQUOTED([TK_NORMAL_STACK_SIZE],0x0300)
)
AC_ARG_ENABLE(max_threads,
	AS_HELP_STRING([--enable-max_threads=<val>],[Maximum number of threds your system could have ]),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS],10)
)
AC_ARG_ENABLE(max_prio,
	AS_HELP_STRING([--enable-max_prio=<val>],[Numer of priorities for you system  (recomended value: 3 or 16)]),
	AC_DEFINE_UNQUOTED([TK_MAX_PRIO_LEVELS],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_PRIO_LEVELS],16)
)
AC_ARG_ENABLE(that_prio,
	AS_HELP_STRING([--enable-that_prio=<val>],[Number of threads that can be sceduled at each priority ]),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS_AT_PRIO],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_THREADS_AT_PRIO],3)
)
AC_ARG_ENABLE(thename_len,
	AS_HELP_STRING([--enable-thename_len=<val>],[Lengts of the string in TCB that holds the name of the thread ]),
	AC_DEFINE_UNQUOTED([TK_THREAD_NAME_LEN],$enableval),
	AC_DEFINE_UNQUOTED([TK_THREAD_NAME_LEN],0x17)
)
AC_ARG_ENABLE(blocked_q,
	AS_HELP_STRING([--enable-blocked_q=<val>],[Maximum nuber of threads blocked on any ITC primitive, i.e. not only Q ]),
	AC_DEFINE_UNQUOTED([TK_MAX_BLOCKED_ON_Q],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_BLOCKED_ON_Q],TK_MAX_THREADS)
)
AC_ARG_ENABLE(max_q,
	AS_HELP_STRING([--enable-max_q=<val>],[Maximum number of any ITC primitive, i.e not only Q ]),
	AC_DEFINE_UNQUOTED([TK_MAX_NUM_Q],$enableval),
	AC_DEFINE_UNQUOTED([TK_MAX_NUM_Q],10)
)


dnl Update config.h
AC_CONFIG_HEADER(../../include/tinker/config.h)

AC_OUTPUT(Makefile-gnu)
