/** 
@mainpage TinKer - A Tiny Kernel for small embedded targets

   This is the internal documentation for TinKer - A Tiny Kernel for small embedded
   targets

   @section INTRODUCTION INTRODUCTION

      The kernel is divided into:
      - \ref COMPONENTS- <em>"Components"</em> add some ability to the
      kernel and are
      totally independent of any other entity except it's parent

      - \ref PACKAGES - <em>"Packages"</em> are the <em>"glue"</em> that makes the
      above possible


   @section OTHER Other info
    
      - TinKers home-page -> <A HREF="http://kato.homelinux.org/~tinker/index.html">Link</A>

*/

//------1---------2---------3---------4---------5---------6---------7---------8


/** @defgroup COMPONENTS COMPONENTS: TinKer components
@ingroup TinKer
@brief This Doxygen "module" define TinKer "components"
@ref main

      You can compile the kernel with or without a
      component by modifying each components main macro. 
      Some of them depend on others, so you need to know the dependency for each.
      You select/deselect each component by a YES or NO in the section 
      <b>//Include components</b> in tk.h.
       
      - \ref SCHED          - Always selected, you cant select or deselect this one. This contains 
                              the inner most part of the kernel.

      - \ref KMEM           - A better malloc

      - \ref ITC            - Native Inter thread
                              communication/synchronization (pSos API)

      - \ref PTIMER         - Preemptive timers. Not all targets support this so you might need 
                              to disable this component.

      - \ref PTHREAD_SCHED  - pThreads API regarding the threads

      - \ref PTHREAD_SYNC   - pThreads API... and so on (TBD) maybe SEM, TIME or just one big one?

      - \ref POSIX_RT       - POSIX 1003.1b (RT extensions)

<p>
Below is a graph with the \e components implemented so far, and their place
logical in the structure. 

@note The blocks are \b click-able and will short-cut you to each
components root-page.

@dot
digraph components {
   node [
      shape=record, 
      style=filled, 
      fillcolor=yellow, 
      fontname=Helvetica, 
      nojustify="true", 
      fontsize=10.0 
   ];

   edge [
      arrowhead=none, 
      arrowtail=normal,
      color=black, 
      fontname=Helvetica,  
      nojustify="true", 
      fontsize=10.0 
   ];
   graph [
      rankdir = "TB", 
      fontname=Helvetica,  
      nojustify="true", 
      fontsize=10.0    
   ];
   
   TinKer           [URL="\ref main"]
   KMEM             [URL="\ref KMEM"]
   SCHED            [URL="\ref SCHED"]
   ITC              [URL="\ref ITC"]
   PTIMER           [URL="\ref PTIMER"]
   PTHREAD          [URL="\ref PTHREAD"]
   PTHREAD_SCHED    [URL="\ref PTHREAD_SCHED"]
   PTHREAD_SYNC     [URL="\ref PTHREAD_SYNC"]
   POSIX_RT         [URL="\ref POSIX_RT"]

   TinKer   -> SCHED;
   TinKer   -> KMEM;
   SCHED    -> ITC;
   ITC      -> PTIMER;
   SCHED    -> PTHREAD;
   PTHREAD  -> PTHREAD_SCHED;
   PTHREAD  -> PTHREAD_SYNC;
   PTHREAD  -> <*>;
   <*>      -> POSIX_RT;

   edge [
      arrowhead=normal, 
      arrowtail=none,
      style=dashed,
      color=purple 
   ];
   /*
   POSIX_RT -> ITC;
   PTHREAD_SYNC -> ITC;
   */
        
}
@enddot



*/
//------1---------2---------3---------4---------5---------6---------7---------8


    /** @defgroup PACKAGES PACKAGES: Code "glue" packages
    @ingroup TinKer
        @ref main
        @brief Packages that magically make TinKer target-transparent

        Pieces of code, adaption and other <i>"stuff"</i> that
        magically make the source of TinKer target-transparent.

        */
        /** @defgroup kernel Kernel 
            @ingroup PACKAGES
            @brief <em>*Work in progress*</em>

            <em>*Work in progress*</em><p>


            Go back to: @ref main
            */
        /** @defgroup kernel_internal Kernel internals
            @ingroup PACKAGES
            @brief <em>*Work in progress*</em>

            <em>*Work in progress*</em><p>


            */
        /** @defgroup kernel_glue Kernel "glue"
            @ingroup PACKAGES
            @brief <em>*Work in progress*</em>

            <em>*Work in progress*</em><p>

            Go back to: @ref main
            */

        /** @defgroup kernel_internal_BSP Kernel-internal BSP stuff
            @ingroup PACKAGES
            @brief <em>*Work in progress*</em>

            <em>*Work in progress*</em><p>

            Go back to: @ref main

            */

    /** @defgroup DOCS Doc stuff
        @ingroup TinKer
        @ref main
        @brief Check-in CVS log

        Various other doc stuff...

        */
    
    /** @defgroup LOGS LOGS
        @ingroup DOCS
        @ref main
        @brief Check-in CVS log

        Here you'll find all the CVS log entries

        */

    /** @defgroup CVSLOG CVSLOG
        @ingroup LOGS
        @ref main
        @brief Check-in CVS log

        Here you'll find all the CVS log entries

        */

     /** @defgroup OtherStuff Other stuff
        @ingroup OtherStuff
        @ref main
        @brief Other stuff

        Here you'll find Other stuff

        */


  

























